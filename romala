default  partial alphanumeric_keys modifier_keys
xkb_symbols "basic" {

    name[Group1]= "Romala";

    key <TLDE> {[ grave, asciitilde, dead_grave, dead_tilde ]};
    key <AE01> {[ 1, exclam, 0x10030C4 ]};
    key <AE02> {[ 2, at, degree ]};
    key <AE03> {[ 3, numbersign, periodcentered ]};
    key <AE04> {[ 4, dollar, 0x1002713 ]};
    key <AE05> {[ 5, percent, 0x1002717 ]};
    key <AE06> {[ 6, asciicircum, notsign ]};
    key <AE07> {[ 7, ampersand, 0x1002665 ]};
    key <AE08> {[ 8, asterisk, 0x100273D ]};
    key <AE09> {[ 9, parenleft, bracketleft, braceleft ]};
    key <AE10> {[ 0, parenright, bracketright, braceright ]};
    key <AE11> {[ minus, underscore, multiply, division ]};
    key <AE12> {[ equal, plus, notequal, plusminus ]};

    key <AD01> {[ q, Q, dead_caron ]};
    key <AD02> {[ w, W, uparrow, 0x10021D1 ]};
    key <AD03> {[ e, E, EuroSign ]};
    key <AD04> {[ r, R, registered ]};
    key <AD05> {[ t, T, trademark ]};
    key <AD06> {[ y, Y, yen ]};
    key <AD07> {[ u, U, dead_abovering ]};
    key <AD08> {[ i, I, 0x100203D ]};
    key <AD09> {[ o, O, dead_ogonek ]};
    key <AD10> {[ p, P, Greek_pi, paragraph ]};
    key <AD11> {[ bracketleft, braceleft, exclamdown, questiondown ]};
    key <AD12> {[ bracketright, braceright, exclam, question ]};

    key <AC01> {[ a, A, leftarrow, 0x10021D0 ]};
    key <AC02> {[ s, S, downarrow, 0x10021D3 ]};
    key <AC03> {[ d, D, rightarrow, 0x10021D2 ]};
    key <AC04> {[ f, F, 0x1000192 ]};
    key <AC05> {[ g, G, dead_macron ]};
    key <AC06> {[ h, H ]};
    key <AC07> {[ j, J ]};
    key <AC08> {[ k, K ]};
    key <AC09> {[ l, L, sterling, Greek_lambda ]};
    key <AC10> {[ semicolon, colon, dead_acute, dead_grave ]};
    key <AC11> {[ apostrophe, quotedbl, dead_diaeresis, dead_circumflex ]};

    key <BKSL> {[ backslash, bar, dead_tilde, dead_cedilla ]};

    key <AB01> {[ z, Z, less, guillemotleft ]};
    key <AB02> {[ x, X, greater, guillemotright ]};
    key <AB03> {[ c, C, copyright, cent ]};
    key <AB04> {[ v, V ]};
    key <AB05> {[ b, B, 0x10020bf ]};
    key <AB06> {[ n, N, dead_tilde ]};
    key <AB07> {[ m, M, mu ]};
    key <AB08> {[ comma, less, guillemotleft, lessthanequal ]};
    key <AB09> {[ period, greater, guillemotright, greaterthanequal ]};
    key <AB10> {[ slash, question, backslash, 0x1002E2E ]};

    include "level3(ralt_switch)"
};

// ̃◌ >> dead_tilde
// ́◌ >> dead_acute
// ̀◌ >> dead_grave
// ̂◌ >> dead_circumflex
// ̧◌ >> dead_cedilla
// ǫ >> dead_ogonek

// ® >> registered
// © >> copyright

// ± >> plusminus

// « >> guillemotleft
// » >> guillemotright

// ÷ >> division >> Obelus
// × >> multiply >> Times

// ♥ >> 0x1002665 >> Heavy Black Hearth

// ‽ >> 0x100203D >> Interrobang
// ⸮ >> 0x1002E2E >> Irony Punctuation

// ✓ >> 0x1002713 >> Check Mark
// ✗ >> 0x1002717 >> Ballot X

// ✼ >> 0x100273C >> Open Centre Teardrop-Spoked Asterisk

// ⇐ >> 0x10021D0 >> Double Arrow Left
// ⇑ >> 0x10021D1 >> Double Arrow Up
// ⇒ >> 0x10021D2 >> Double Arrow Right
// ⇓ >> 0x10021D3 >> Double Arrow Down

// ッ >> 0x10030C4 >> Tsu

// 🤷 >> 0x101F937 >> Person Shrugging